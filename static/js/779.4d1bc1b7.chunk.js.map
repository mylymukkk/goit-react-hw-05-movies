{"version":3,"file":"static/js/779.4d1bc1b7.chunk.js","mappings":"0OAEaA,EAAcC,EAAAA,GAAAA,GAAH,0HAQXC,EAASD,EAAAA,GAAAA,EAAH,8IAUNE,EAAUF,EAAAA,GAAAA,EAAH,kK,kBCwBpB,EAtCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GACXO,MAAK,SAAAC,GACJJ,EAAWI,EACZ,IAEAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACV,KAGF,gCACsB,IAAnBG,EAAQS,SACP,SAAChB,EAAD,UACGO,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAAClB,EAAD,YACE,uCACCiB,MAEH,SAAChB,EAAD,UAAUiB,MALHF,EADE,MAYG,IAAnBX,EAAQS,SACP,SAACb,EAAD,yDAIP,C,+LCxCKkB,EAAiB,mCAIhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAFN,SAIkBK,EAAAA,EAAAA,IAAA,8BAAiCH,IAJnD,cAICI,EAJD,yBAKEA,EAASf,KAAKgB,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACCP,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAFN,SAIkBK,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,YAA+BP,IAJjD,cAICI,EAJD,yBAKEA,EAASf,MALX,kEAQA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gFACCT,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTW,MAAAA,IAHG,SAKkBN,EAAAA,EAAAA,IAAA,wBAA2BH,IAL7C,cAKCI,EALD,yBAMEA,EAASf,KAAKgB,SANhB,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,gFACCP,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAFN,SAIkBK,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBAAuCP,IAJzD,cAICI,EAJD,yBAKEA,EAASf,KAAKsB,MALhB,kEAQA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BoB,GAA7B,gFACCP,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTc,SAAU,UAHP,SAKkBT,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBAAuCP,IALzD,cAKCI,EALD,yBAMEA,EAASf,KAAKgB,SANhB,kEAnCPF,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 10px;\n  list-style: none;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 10px;\n  font-size: 13px;\n\n  & span {\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Content = styled.p`\n  padding: 10px;\n  text-align: justify;\n  line-height: 1.4;\n  font-size: 14px;\n  border: 1px solid orangered;\n  border-radius: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsList, Author, Content } from './Reviews.styled';\n\nimport { getReviewById } from 'services/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviewById(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <Author>\n                <span>Author: </span>\n                {author}\n              </Author>\n              <Content>{content}</Content>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n\n      {reviews.length === 0 && (\n        <Content>We don`t have information for this movie</Content>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst MOVIES_API_KEY = '84c0cdd7fd9e4d5f8788ea3746d1dc48';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/trending/movie/day?${queryParams}`);\n  return response.data.results;\n}\n\nexport async function getMovieById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/movie/${MovieId}?${queryParams}`);\n  return response.data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n    query,\n  });\n  const response = await axios.get(`/search/movie?${queryParams}`);\n  return response.data.results;\n}\n\nexport async function getCastById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/movie/${MovieId}/credits?${queryParams}`);\n  return response.data.cast;\n}\n\nexport async function getReviewById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n    language: 'en-US',\n  });\n  const response = await axios.get(`/movie/${MovieId}/reviews?${queryParams}`);\n  return response.data.results;\n}\n"],"names":["ReviewsList","styled","Author","Content","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewById","then","data","catch","error","console","length","map","id","author","content","MOVIES_API_KEY","getTrendingMovies","queryParams","URLSearchParams","api_key","axios","response","results","getMovieById","MovieId","getMoviesByQuery","query","getCastById","cast","language"],"sourceRoot":""}