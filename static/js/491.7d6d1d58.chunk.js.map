{"version":3,"file":"static/js/491.7d6d1d58.chunk.js","mappings":"uQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kP,SCYvB,EATiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,IACCC,IAGN,E,SCXYC,EAAYJ,EAAAA,GAAAA,QAAH,iHAOTK,EAAQL,EAAAA,GAAAA,IAAH,wGAOLM,EAAQN,EAAAA,GAAAA,GAAH,4IAQLO,EAAUP,EAAAA,GAAAA,IAAH,gMAePQ,EAAWR,EAAAA,GAAAA,GAAH,4IAQRS,EAAOT,EAAAA,GAAAA,EAAH,sKASJU,EAAaV,EAAAA,GAAAA,GAAH,yPAaVW,EAAgBX,EAAAA,GAAAA,GAAH,wYC4B1B,EA/EqB,WAAO,IAAD,IACjBY,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EACNF,EADME,YAAaC,EACnBH,EADmBG,MAAOC,EAC1BJ,EAD0BI,aAAcC,EACxCL,EADwCK,aAAcC,EACtDN,EADsDM,SAAUC,EAChEP,EADgEO,OAclE,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAahB,GACViB,MAAK,SAAAC,GACJV,EAAaU,EACd,IAEAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACpB,KAGF,iCACE,SAAC,EAAD,CAAUV,GAAIY,EAAd,mBACA,UAACV,EAAD,WACGiB,GACC,SAAChB,EAAD,CACE6B,IAAK,kCAAoCb,EACzCc,IAAKb,KAGP,SAACjB,EAAD,CACE6B,IAAI,0DACJC,IAAI,cAGR,4BACE,SAAC7B,EAAD,UAAQgB,KACR,UAACf,EAAD,YACE,0BACE,6CACC,IAAI6B,KAAKb,GAAcc,kBAE1B,0BACE,2CACCC,OAAOC,WAAWf,GAAcgB,QAAQ,UAI7C,SAAChC,EAAD,wBACA,SAACC,EAAD,UAAOgB,IACNC,IACC,iCACE,SAAClB,EAAD,sBACA,SAACE,EAAD,UACGgB,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,gBAQtB,SAAClC,EAAD,sCACA,UAACG,EAAD,YACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAA0C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,+LC7FKC,EAAiB,mCAIhB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAFN,SAIkBK,EAAAA,EAAAA,IAAA,8BAAiCH,IAJnD,cAICI,EAJD,yBAKEA,EAAStB,KAAKuB,SALhB,kEAQA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B0B,GAA5B,gFACCN,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAFN,SAIkBK,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,YAA+BN,IAJjD,cAICI,EAJD,yBAKEA,EAAStB,MALX,kEAQA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gFACCR,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTU,MAAAA,IAHG,SAKkBL,EAAAA,EAAAA,IAAA,wBAA2BH,IAL7C,cAKCI,EALD,yBAMEA,EAAStB,KAAKuB,SANhB,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,gFACCN,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,IAFN,SAIkBK,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,oBAAuCN,IAJzD,cAICI,EAJD,yBAKEA,EAAStB,KAAK4B,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BL,GAA7B,gFACCN,EAAc,IAAIC,gBAAgB,CACtCC,QAASJ,EACTc,SAAU,UAHP,SAKkBT,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,oBAAuCN,IALzD,cAKCI,EALD,yBAMEA,EAAStB,KAAKuB,SANhB,kEAnCPF,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  font-weight: 500;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  gap: 30px;\n  border-bottom: 1px solid #727272;\n  padding: 15px 0;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: auto;\n  object-fit: cover;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n  text-transform: uppercase;\n  font-size: 30px;\n  font-weight: 500;\n  color: orangered;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n\n  & p {\n    font-size: 13px;\n  }\n\n  & span {\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 20px;\n  color: orangered;\n`;\n\nexport const Text = styled.p`\n  padding: 15px;\n  margin-bottom: 10px;\n  border: 1px solid orangered;\n  border-radius: 5px;\n  text-align: justify;\n  line-height: 1.4;\n`;\n\nexport const GenresList = styled.ul`\n  padding-left: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  & li {\n    list-style-image: linear-gradient(to left, orangered, orangered);\n    list-style-position: inside;\n    font-size: 15px;\n  }\n`;\n\nexport const ExtraInfoList = styled.ul`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 10px;\n\n  & li {\n    padding: 5px 10px;\n    border: 1px solid orangered;\n    border-radius: 3px;\n    font-weight: 500;\n    font-size: 12px;\n    text-transform: uppercase;\n\n    &:hover {\n      background-color: orangered;\n      border-color: white;\n\n      & a {\n        color: white;\n      }\n    }\n  }\n`;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\n\nimport BackLink from '../../components/BackLink/BackLink';\n\nimport { getMovieById } from '../../services/Api';\n\nimport {\n  Container,\n  Image,\n  Title,\n  Wrapper,\n  Subtitle,\n  Text,\n  GenresList,\n  ExtraInfoList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const [movieInfo, setMovieInfo] = useState([]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieInfo;\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(data => {\n        setMovieInfo(data);\n      })\n\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back</BackLink>\n      <Container>\n        {poster_path ? (\n          <Image\n            src={'https://image.tmdb.org/t/p/w500' + poster_path}\n            alt={title}\n          />\n        ) : (\n          <Image\n            src=\"https://via.placeholder.com/300x500.png?text=no%20image\"\n            alt=\"No image\"\n          />\n        )}\n        <div>\n          <Title>{title}</Title>\n          <Wrapper>\n            <p>\n              <span>Release date: </span>\n              {new Date(release_date).getFullYear()}\n            </p>\n            <p>\n              <span>User Score: </span>\n              {Number.parseFloat(vote_average).toFixed(1)}\n            </p>\n          </Wrapper>\n\n          <Subtitle>Overview</Subtitle>\n          <Text>{overview}</Text>\n          {genres && (\n            <>\n              <Subtitle>Genres</Subtitle>\n              <GenresList>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </GenresList>\n            </>\n          )}\n        </div>\n      </Container>\n      <Subtitle>Additional information</Subtitle>\n      <ExtraInfoList>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ExtraInfoList>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst MOVIES_API_KEY = '84c0cdd7fd9e4d5f8788ea3746d1dc48';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/trending/movie/day?${queryParams}`);\n  return response.data.results;\n}\n\nexport async function getMovieById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/movie/${MovieId}?${queryParams}`);\n  return response.data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n    query,\n  });\n  const response = await axios.get(`/search/movie?${queryParams}`);\n  return response.data.results;\n}\n\nexport async function getCastById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/movie/${MovieId}/credits?${queryParams}`);\n  return response.data.cast;\n}\n\nexport async function getReviewById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n    language: 'en-US',\n  });\n  const response = await axios.get(`/movie/${MovieId}/reviews?${queryParams}`);\n  return response.data.results;\n}\n"],"names":["StyledLink","styled","Link","to","children","Container","Image","Title","Wrapper","Subtitle","Text","GenresList","ExtraInfoList","movieId","useParams","backLinkHref","useLocation","state","from","useState","movieInfo","setMovieInfo","poster_path","title","release_date","vote_average","overview","genres","useEffect","getMovieById","then","data","catch","error","console","src","alt","Date","getFullYear","Number","parseFloat","toFixed","map","id","name","Suspense","fallback","MOVIES_API_KEY","getTrendingMovies","queryParams","URLSearchParams","api_key","axios","response","results","MovieId","getMoviesByQuery","query","getCastById","cast","getReviewById","language"],"sourceRoot":""}