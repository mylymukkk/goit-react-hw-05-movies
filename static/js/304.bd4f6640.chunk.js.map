{"version":3,"file":"static/js/304.bd4f6640.chunk.js","mappings":"uOAEaA,EAAOC,EAAAA,GAAAA,GAAH,0VAuBJC,EAAQD,EAAAA,GAAAA,GAAH,wH,kBCSlB,EA5Ba,WACX,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJJ,EAAkBI,EACnB,IAEAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,KAGD,iCACE,SAACT,EAAD,8BACA,SAACF,EAAD,UACGI,EAAeS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,EADS,QAQ3B,C,+LC9BKG,EAAiB,mCAIhB,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,6FACCW,EAAc,IAAIC,gBAAgB,CACtCC,QAASH,IAFN,SAIkBI,EAAAA,EAAAA,IAAA,8BAAiCH,IAJnD,cAICI,EAJD,yBAKEA,EAASb,KAAKc,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACCP,EAAc,IAAIC,gBAAgB,CACtCC,QAASH,IAFN,SAIkBI,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,YAA+BP,IAJjD,cAICI,EAJD,yBAKEA,EAASb,MALX,kEAQA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gFACCT,EAAc,IAAIC,gBAAgB,CACtCC,QAASH,EACTU,MAAAA,IAHG,SAKkBN,EAAAA,EAAAA,IAAA,wBAA2BH,IAL7C,cAKCI,EALD,yBAMEA,EAASb,KAAKc,SANhB,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,gFACCP,EAAc,IAAIC,gBAAgB,CACtCC,QAASH,IAFN,SAIkBI,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBAAuCP,IAJzD,cAICI,EAJD,yBAKEA,EAASb,KAAKoB,MALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BL,GAA7B,gFACCP,EAAc,IAAIC,gBAAgB,CACtCC,QAASH,EACTc,SAAU,UAHP,SAKkBV,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBAAuCP,IALzD,cAKCI,EALD,yBAMEA,EAASb,KAAKc,SANhB,kEAnCPF,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-bottom: 5px;\n\n  & li {\n    padding: 5px;\n    border: 1px solid orangered;\n    border-radius: 3px;\n\n    &:not(:last-child) {\n      margin-bottom: 5px;\n    }\n\n    &:hover {\n      background-color: orangered;\n      border-color: white;\n      \n      & a {\n        color: white;\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  color: orangered;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { List, Title } from './Home.styled';\nimport { getTrendingMovies } from 'services/Api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(data => {\n        setTrendingMovies(data);\n      })\n\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      <List>\n        {trendingMovies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>{title}</Link>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst MOVIES_API_KEY = '84c0cdd7fd9e4d5f8788ea3746d1dc48';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/trending/movie/day?${queryParams}`);\n  return response.data.results;\n}\n\nexport async function getMovieById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/movie/${MovieId}?${queryParams}`);\n  return response.data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n    query,\n  });\n  const response = await axios.get(`/search/movie?${queryParams}`);\n  return response.data.results;\n}\n\nexport async function getCastById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n  });\n  const response = await axios.get(`/movie/${MovieId}/credits?${queryParams}`);\n  return response.data.cast;\n}\n\nexport async function getReviewById(MovieId) {\n  const queryParams = new URLSearchParams({\n    api_key: MOVIES_API_KEY,\n    language: 'en-US',\n  });\n  const response = await axios.get(`/movie/${MovieId}/reviews?${queryParams}`);\n  return response.data.results;\n}\n"],"names":["List","styled","Title","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","then","data","catch","error","console","map","id","title","to","MOVIES_API_KEY","queryParams","URLSearchParams","api_key","axios","response","results","getMovieById","MovieId","getMoviesByQuery","query","getCastById","cast","getReviewById","language"],"sourceRoot":""}